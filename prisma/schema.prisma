generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  price       Decimal       @db.Decimal(10, 2)
  stock       Int           @default(0)
  min_stock   Int
  max_stock   Int
  category_id Int
  image_url   String?
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  category    Category      @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  salesDetail SalesDetail[]
}

model Category {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  products   Product[]
}

model Role {
  id         Int      @id @default(autoincrement())
  role       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      User[]
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  password   String
  role_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  role       Role     @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sales      Sale[]
}

model Sale {
  id          Int           @id @default(autoincrement())
  user_id     Int
  total       Decimal       @db.Decimal(10, 2)
  customer_id Int
  sale_date   DateTime      @default(now())
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  user        User          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  customer    Customer      @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  salesDetail SalesDetail[]
}

model SalesDetail {
  id         Int      @id @default(autoincrement())
  sale_id    Int
  product_id Int
  quantity   Int
  unit_price Decimal  @db.Decimal(10, 2)
  subtotal   Decimal  @db.Decimal(10, 2)
  created_at DateTime @default(now())
  sale       Sale     @relation(fields: [sale_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Customer {
  id         Int      @id @default(autoincrement())
  name       String
  email      String?  @unique
  phone      String?
  address    String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  sales      Sale[]
}

enum RoleEnum {
  ADMINISTRADOR
  VENDEDOR
  CLIENTE
}
